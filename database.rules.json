{
  "rules" : {
    "$user_id" : {
        ".read" : "$user_id === auth.uid",
        ".write" : "$user_id === auth.uid",

        "peeps" : {
            "$peep_id" : {
                ".validate" : "newData.hasChildren(['name'])",
                "name" : {
                    ".validate" : "newData.isString() && newData.val().length > 0"
                }
                // Currently allow other fields.
                // "$other" : {".validate" : false}
            }
        },

        "notes" : {
            ".indexOn" : ["peep_id", "timestamp"],

            "$note_id" : {
                // Note that peep_id is optional since a note may not be about a person.
                ".validate" : "newData.hasChildren(['timestamp', 'title', 'message'])",

                "peep_id" : {
                    ".validate" : "root.child($user_id + '/peeps/' + newData.val()).exists()"
                },

                // Note that clients should use firebase.database.ServerValue.TIMESTAMP to 
                // make sure timestamps are safe.
                "timestamp" : {
                    ".validate" : "newData.val() <= now"
                },

                "title" : {
                    ".validate" : "newData.isString() && newData.val().length > 0"
                },

                "message" : {
                    ".validate" : "newData.isString() && newData.val().length > 0"
                } 
            }
        },

        "teams" : {
            "$team_id" : {
                ".validate" : "newData.hasChildren(['name'])",
                "name" : {
                    ".validate" : "newData.isString()"
                },
                "$peep_id" : {
                    ".validate" : "newData.isString()"
                }
            }
        }
    }
  }
}
